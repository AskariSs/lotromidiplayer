/* Copyright (c) 2008 Ben Howell
 * This software is licensed under the MIT License
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a 
 * copy of this software and associated documentation files (the "Software"), 
 * to deal in the Software without restriction, including without limitation 
 * the rights to use, copy, modify, merge, publish, distribute, sublicense, 
 * and/or sell copies of the Software, and to permit persons to whom the 
 * Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in 
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
 * DEALINGS IN THE SOFTWARE.
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class winapi_WinApi */

#ifndef _Included_winapi_WinApi
#define _Included_winapi_WinApi
#ifdef __cplusplus
extern "C" {
#endif
#undef winapi_WinApi_WM_KEYDOWN
#define winapi_WinApi_WM_KEYDOWN 256L
#undef winapi_WinApi_WM_KEYUP
#define winapi_WinApi_WM_KEYUP 257L
#undef winapi_WinApi_WM_CHAR
#define winapi_WinApi_WM_CHAR 258L
#undef winapi_WinApi_WM_ACTIVATE
#define winapi_WinApi_WM_ACTIVATE 6L
#undef winapi_WinApi_WM_ACTIVATEAPP
#define winapi_WinApi_WM_ACTIVATEAPP 28L
#undef winapi_WinApi_WA_INACTIVE
#define winapi_WinApi_WA_INACTIVE 0L
#undef winapi_WinApi_WA_ACTIVE
#define winapi_WinApi_WA_ACTIVE 1L
#undef winapi_WinApi_WA_CLICKACTIVE
#define winapi_WinApi_WA_CLICKACTIVE 2L
#undef winapi_WinApi_WM_SETFOCUS
#define winapi_WinApi_WM_SETFOCUS 7L
#undef winapi_WinApi_WM_KILLFOCUS
#define winapi_WinApi_WM_KILLFOCUS 8L
#undef winapi_WinApi_MAPVK_VK_TO_VSC
#define winapi_WinApi_MAPVK_VK_TO_VSC 0L
#undef winapi_WinApi_MAPVK_VSC_TO_VK
#define winapi_WinApi_MAPVK_VSC_TO_VK 1L
#undef winapi_WinApi_MAPVK_VK_TO_CHAR
#define winapi_WinApi_MAPVK_VK_TO_CHAR 2L
/*
 * Class:     winapi_WinApi
 * Method:    FindWindow
 * Signature: (Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_digero_lotromusic_windows_WinApi_FindWindow
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     winapi_WinApi
 * Method:    GetForegroundWindow
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_digero_lotromusic_windows_WinApi_GetForegroundWindow
  (JNIEnv *, jclass);

/*
 * Class:     winapi_WinApi
 * Method:    SendMessage
 * Signature: (IIII)I
 */
JNIEXPORT jint JNICALL Java_com_digero_lotromusic_windows_WinApi_SendMessage
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     winapi_WinApi
 * Method:    PostMessage
 * Signature: (IIII)Z
 */
JNIEXPORT jboolean JNICALL Java_com_digero_lotromusic_windows_WinApi_PostMessage
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     winapi_WinApi
 * Method:    MapVirtualKey
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_digero_lotromusic_windows_WinApi_MapVirtualKey
  (JNIEnv *, jclass, jint, jint);

JNIEXPORT jstring JNICALL Java_com_digero_lotromusic_windows_WinApi_GetMyDocumentsPath
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
